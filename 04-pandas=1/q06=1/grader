#! /usr/local/bin/python3
r"""Test cases
>>> run_answer()
    _c0 _c1  _c2         _c3  suma
0     0   E    1  1999-02-28     1
1     1   A    2  1999-10-28     3
2     2   B    5  1998-05-02     7
3     3   A    3  1999-08-28     6
4     4   C    6  1999-12-01    10
5     5   A    7  1998-07-28    12
6     6   A    9  1997-02-28    15
7     7   B    1  1999-05-10     8
8     8   E    2  1997-04-12    10
9     9   B    3  1999-11-23    12
10   10   C    7  1998-01-17    17
11   11   C    5  1998-12-28    16
12   12   D    3  1999-10-15    15
13   13   E    8  1998-11-01    21
14   14   B    9  1999-08-12    23
15   15   D    1  1997-12-01    16
16   16   E    3  1997-07-28    19
17   17   D    5  1998-08-12    22
18   18   E    8  1999-08-24    26
19   19   E    9  1998-01-23    28
20   20   E    7  1999-06-22    27
21   21   E    3  1999-04-24    24
22   22   D    5  1999-06-25    27
23   23   A    1  1999-08-25    24
24   24   E    4  1997-07-26    28
25   25   E    6  1997-09-24    31
26   26   A    8  1997-09-28    34
27   27   E    5  1999-06-22    32
28   28   A    6  1999-07-29    34
29   29   C    0  1999-08-22    29
30   30   A    1  1998-04-26    31
31   31   D    2  1998-02-24    33
32   32   E    5  1999-03-24    37
33   33   B    4  1998-03-23    37
34   34   B    6  1999-04-21    40
35   35   D    7  1999-02-29    42
36   36   B    8  1997-05-21    44
37   37   C    9  1997-07-22    46
38   38   E    1  1999-09-28    39
39   39   E    5  1998-01-26    44

"""
import doctest
import subprocess

def run_answer():
    '''Codigo especifico para ejecutar la respuesta'''
    #----------------------------------------------------------------------------------------------
    # Ejecuta el cÃ³digo del estudiante
    #----------------------------------------------------------------------------------------------
    answer = open('question.py', 'rt', encoding='utf-8').readlines()
    answer = [row for row in  answer if len(row) >= 2 and row[0:2] != '##']
    answer = '\n'.join(answer)
    return exec(answer)

#--------------------------------------------------------------------------------------------------
# Grader (generic)
#--------------------------------------------------------------------------------------------------
subprocess.run(['rm', '-f', '_SUCCESS']) # borra el flag de exito de la corrida
RESULT = doctest.testmod()               # ejecuta el doctest
FAIL, _ = RESULT                         # fail, total
if FAIL == 0:                            # grading
    open('_SUCCESS', 'a').close()        #
else:
    print('\n')
#--------------------------------------------------------------------------------------------------
