#! /usr/local/bin/python3
r"""Test cases
>>> run_answer()
    _c0 _c1  _c2         _c3   ano
0     0   E    1  1999-02-28  1999
1     1   A    2  1999-10-28  1999
2     2   B    5  1998-05-02  1998
3     3   A    3  1999-08-28  1999
4     4   C    6  1999-12-01  1999
5     5   A    7  1998-07-28  1998
6     6   A    9  1997-02-28  1997
7     7   B    1  1999-05-10  1999
8     8   E    2  1997-04-12  1997
9     9   B    3  1999-11-23  1999
10   10   C    7  1998-01-17  1998
11   11   C    5  1998-12-28  1998
12   12   D    3  1999-10-15  1999
13   13   E    8  1998-11-01  1998
14   14   B    9  1999-08-12  1999
15   15   D    1  1997-12-01  1997
16   16   E    3  1997-07-28  1997
17   17   D    5  1998-08-12  1998
18   18   E    8  1999-08-24  1999
19   19   E    9  1998-01-23  1998
20   20   E    7  1999-06-22  1999
21   21   E    3  1999-04-24  1999
22   22   D    5  1999-06-25  1999
23   23   A    1  1999-08-25  1999
24   24   E    4  1997-07-26  1997
25   25   E    6  1997-09-24  1997
26   26   A    8  1997-09-28  1997
27   27   E    5  1999-06-22  1999
28   28   A    6  1999-07-29  1999
29   29   C    0  1999-08-22  1999
30   30   A    1  1998-04-26  1998
31   31   D    2  1998-02-24  1998
32   32   E    5  1999-03-24  1999
33   33   B    4  1998-03-23  1998
34   34   B    6  1999-04-21  1999
35   35   D    7  1999-02-29  1999
36   36   B    8  1997-05-21  1997
37   37   C    9  1997-07-22  1997
38   38   E    1  1999-09-28  1999
39   39   E    5  1998-01-26  1998

"""
import doctest
import subprocess

def run_answer():
    '''Codigo especifico para ejecutar la respuesta'''
    #----------------------------------------------------------------------------------------------
    # Ejecuta el cÃ³digo del estudiante
    #----------------------------------------------------------------------------------------------
    answer = open('question.py', 'rt', encoding='utf-8').readlines()
    answer = [row for row in  answer if len(row) >= 2 and row[0:2] != '##']
    answer = '\n'.join(answer)
    return exec(answer,  globals())

#--------------------------------------------------------------------------------------------------
# Grader (generic)
#--------------------------------------------------------------------------------------------------
subprocess.run(['rm', '-f', '_SUCCESS']) # borra el flag de exito de la corrida
RESULT = doctest.testmod()               # ejecuta el doctest
FAIL, _ = RESULT                         # fail, total
if FAIL == 0:                            # grading
    open('_SUCCESS', 'a').close()        #
else:
    print('\n')
#--------------------------------------------------------------------------------------------------
