#! /usr/local/bin/python3
r"""Test cases
>>> run_answer()
    _c0    lista
0     0    b,f,g
1     1    a,c,f
2     2  a,c,e,f
3     3      a,b
4     4  a,d,f,g
5     5      c,d
6     6    a,d,g
7     7      a,b
8     8  a,d,e,f
9     9  b,d,f,g
10   10  b,c,d,f
11   11  a,c,d,e
12   12  b,e,f,g
13   13      c,f
14   14      b,d
15   15      e,f
16   16    b,e,f
17   17      a,g
18   18  a,c,e,f
19   19      a,e
20   20      e,f
21   21    b,c,g
22   22    a,c,f
23   23    a,d,f
24   24      c,d
25   25    c,d,e
26   26    a,e,f
27   27    a,c,g
28   28      e,f
29   29  a,c,f,g
30   30      b,f
31   31      b,f
32   32      a,c
33   33    b,c,f
34   34    a,e,f
35   35      a,f
36   36      a,c
37   37  a,c,e,f
38   38      d,e
39   39    a,d,f

"""
import doctest
import subprocess

def run_answer():
    '''Codigo especifico para ejecutar la respuesta'''
    #----------------------------------------------------------------------------------------------
    # Ejecuta el cÃ³digo del estudiante
    #----------------------------------------------------------------------------------------------
    answer = open('question.py', 'rt', encoding='utf-8').readlines()
    answer = [row for row in  answer if len(row) >= 2 and row[0:2] != '##']
    answer = '\n'.join(answer)
    return exec(answer,globals())

#--------------------------------------------------------------------------------------------------
# Grader (generic)
#--------------------------------------------------------------------------------------------------
subprocess.run(['rm', '-f', '_SUCCESS']) # borra el flag de exito de la corrida
RESULT = doctest.testmod()               # ejecuta el doctest
FAIL, _ = RESULT                         # fail, total
if FAIL == 0:                            # grading
    open('_SUCCESS', 'a').close()        #
else:
    print('\n')
#--------------------------------------------------------------------------------------------------
